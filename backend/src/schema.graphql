# import * from './generated/prisma.graphql'

type Mutation {
	createPolitician(
		party: String
		name: String!
		state: String
		district: Int
		title: String
		chamber: String
		govUrl: String
		nthCongress: String
		gender: String
		image: String
		largeImage: String
		phone: String
		website: String
	): Politician!
	updatePolitician(
		id: ID
		party: String
		name: String
		state: String
		district: Int
		gender: String
		image: String
		largeImage: String
		phone: String
		website: String
	): Politician!
	deletePolitician(id: ID): Politician
	followPolitician(id: ID): User
	unfollowPolitician(id: ID): User
	toggleFollowPolitician(id: ID): User
	createBill(
		number: Int
		title: String
		summary: String
		congress: String
		billType: String
		committees: String
		link: String
	): Bill
	updateBill(
		number: Int
		title: String
		summary: String
		congress: String
		billType: String
		committees: String
		link: String
	): Bill
	deleteBill(id: ID): Bill
	followBill(id: ID): User
	unfollowBill(id: ID): User
	scrapeBill(number: String): Bill
	signup(name: String!, email: String!, password: String!): User!
	signin(email: String!, password: String!): User!
	updatePermissions(permissions: [Permission], userId: ID!): User
}

type Query {
	politicians(
		where: PoliticianWhereInput
		orderBy: PoliticianOrderByInput
		skip: Int
		first: Int
	): [Politician]!
	politician(where: PoliticianWhereUniqueInput!): Politician
	politiciansConnection(where: PoliticianWhereInput): PoliticianConnection!
	myPolitician: Politician
	myPoliticians: [Politician]
	bill(where: BillWhereUniqueInput): Bill
	bills(
		where: BillWhereInput
		orderBy: BillOrderByInput
		skip: Int
		first: Int
	): [Bill]
	myBills: [Bill]
	billsScrape(url: String): Bill
	me: User
	users: [User]!
	owner: User
	scrapePoliticians(url: String): Politician
}

type User {
	id: ID!
	name: String!
	email: String!
	permissions: [Permission!]!
	listings: [Politician]
	myPoliticians: [Politician]
	myBills: [Bill]
}
